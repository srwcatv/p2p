<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catv.p2p.base.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.catv.p2p.base.domain.UserInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="bitState" property="bitState" jdbcType="BIGINT"/>
        <result column="realName" property="realName" jdbcType="VARCHAR"/>
        <result column="idNumber" property="idNumber" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phoneNumber" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="score" property="score"/>
        <result column="realAuthId" property="realAuthId"/>
        <association property="marriage" column="marriage_id" javaType="SystemDictionaryItem"
                     select="com.catv.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
        <association property="incomeGrade" column="incomeGrade_id" javaType="SystemDictionaryItem"
                     select="com.catv.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
        <association property="kidCount" column="kidCount_id" javaType="SystemDictionaryItem"
                     select="com.catv.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
        <association property="educationBackground" column="educationBackground_id" javaType="SystemDictionaryItem"
                     select="com.catv.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
        <association property="houseCondition" column="houseCondition_id" javaType="SystemDictionaryItem"
                     select="com.catv.p2p.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `userinfo`
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert">
    insert into `userinfo` (id,version, bitState, realName,
      idNumber, phoneNumber, email,score,realAuthId, incomeGrade_id,
      marriage_id, kidCount_id, educationBackground_id, 
      houseCondition_id)
    values (#{id},0, #{bitState,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR},
      #{idNumber,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{email},#{score},#{realAuthId}, #{incomeGrade.id,jdbcType=BIGINT},
      #{marriage.id,jdbcType=BIGINT}, #{kidCount.id,jdbcType=BIGINT}, #{educationBackground.id,jdbcType=BIGINT},
      #{houseCondition.id,jdbcType=BIGINT})
  </insert>
    <update id="updateByPrimaryKey">
    update `userinfo`
    set version = version+1,
      bitState = #{bitState,jdbcType=BIGINT},
      realName = #{realName,jdbcType=VARCHAR},
      idNumber = #{idNumber,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      score = #{score},
      realAuthId = #{realAuthId},
      incomeGrade_id = #{incomeGrade.id,jdbcType=BIGINT},
      marriage_id = #{marriage.id,jdbcType=BIGINT},
      kidCount_id = #{kidCount.id,jdbcType=BIGINT},
      educationBackground_id = #{educationBackground.id,jdbcType=BIGINT},
      houseCondition_id = #{houseCondition.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT} and version = #{version}
  </update>
    <sql id="base_column">
        id, version, bitState, realName, idNumber, phoneNumber, email, score,realAuthId, incomeGrade_id, marriage_id,
    kidCount_id, educationBackground_id, houseCondition_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select <include refid="base_column"/>
    from `userinfo`
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="base_column"/>
    from `userinfo`
  </select>

    <select id="selectByPhoneNumber" resultType="int" parameterType="java.lang.String">
        select count(id)
        from `userinfo`
        where phoneNumber = #{phoneNumber}
    </select>

    <select id="selectByEmail" resultType="int" parameterType="java.lang.String">
        select count(id)
        from `userinfo`
        where email = #{email}
    </select>

    <select id="getList" resultType="map" parameterType="String">
        SELECT l.id as id,l.username as username
        FROM userinfo as u LEFT JOIN logininfo as l ON u.id = l.id
        WHERE l.username LIKE concat('%',#{keyword},'%')
    </select>
</mapper>